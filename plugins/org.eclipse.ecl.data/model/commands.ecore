<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="commands"
    nsURI="http://www.eclipse.org/ecl/data/commands.ecore" nsPrefix="dataCommands">
  <eClassifiers xsi:type="ecore:EClass" name="ReadCsvFile" eSuperTypes="../../org.eclipse.ecl.core/model/ecl.ecore#//Command">
    <eAnnotations source="http://www.eclipse.org/ecl/docs">
      <details key="description" value="Parses given csv file. Fails if file is not found or format is invalid"/>
      <details key="returns" value="&lt;code>Table&lt;/code> EMF Object. "/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="URI to a file to read. Currently supported schemes are workspace:/ for files in workspace and file:/ for files on local file system"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Print" eSuperTypes="../../org.eclipse.ecl.core/model/ecl.ecore#//Command">
    <eAnnotations source="http://www.eclipse.org/ecl/docs">
      <details key="description" value="Takes a list of objects from input pipe and prints them as a plain-text table into output pipe."/>
      <details key="returns" value="Series of string objects"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="input" unique="false" upperBound="-1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EObject">
      <eAnnotations source="http://www.eclipse.org/ecl/input"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WriteCsvFile" eSuperTypes="../../org.eclipse.ecl.core/model/ecl.ecore#//Command">
    <eAnnotations source="http://www.eclipse.org/ecl/docs">
      <details key="description" value="Writes given table into csv file. Fails if file is not accessible"/>
      <details key="returns" value="The value of &lt;code>table&lt;/code> argument."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="table" eType="ecore:EClass objects.ecore#//Table">
      <eAnnotations source="http://www.eclipse.org/ecl/input"/>
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="Table to write"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="URI to write CSV data to. Currently supported schemes are workspace:/ for files in workspace and file:/ for files on local file system"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExcludeColumns" eSuperTypes="../../org.eclipse.ecl.core/model/ecl.ecore#//Command">
    <eAnnotations source="http://www.eclipse.org/ecl/docs">
      <details key="description" value="Takes a table from input and returns the same table which has some columns excluded. "/>
      <details key="returns" value="Copy of input table object without columns with names listed in &lt;code>columns&lt;/code>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="table" eType="ecore:EClass objects.ecore#//Table">
      <eAnnotations source="http://www.eclipse.org/ecl/input"/>
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="Table to exclude columns from"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="columns" upperBound="-1"
        eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="Column names to exclude from table. It is OK to pass column names which are not present in table"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SelectColumns" eSuperTypes="../../org.eclipse.ecl.core/model/ecl.ecore#//Command">
    <eAnnotations source="http://www.eclipse.org/ecl/docs">
      <details key="description" value="Takes a table from input and returns the table containing only columns passed into &lt;code>columns&lt;/code> argument."/>
      <details key="returns" value="Copy of input table object with only columns with names listed in &lt;code>columns&lt;/code>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="table" eType="ecore:EClass objects.ecore#//Table">
      <eAnnotations source="http://www.eclipse.org/ecl/input"/>
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="Table to take columns from"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="columns" upperBound="-1"
        eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="Column names to take from table. If given column name is not present in input table, command fails"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AssertTablesMatch" eSuperTypes="../../org.eclipse.ecl.core/model/ecl.ecore#//Command">
    <eAnnotations source="http://www.eclipse.org/ecl/docs">
      <details key="description" value="Compares contents of two tables. If contents are not the same, fails with a descriptive message"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="left" eType="ecore:EClass objects.ecore#//Table"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="right" eType="ecore:EClass objects.ecore#//Table"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreColumnOrder" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"
        defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="When true, column order is not taken into account"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ignoreMissingColumns" eType="#//IgnoreColumnsMode"
        defaultValueLiteral="NONE">
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="Describes the comparison behaviour in case when one of tables contains a column which is not present in other table:&#xA;&lt;ul>&#xA;&lt;li>&lt;b>NONE&lt;/b> &amp;ndash; all columns must be present in both tables&lt;/li>&#xA;&lt;li>&lt;b>LEFT&lt;/b> &amp;ndash; columns from right table which are not present in left, are ignored&lt;/li>&#xA;&lt;li>&lt;b>RIGHT&lt;/b> &amp;ndash; columns from left table which are not present in right, are ignored&lt;/li>&#xA;&lt;li>&lt;b>BOTH&lt;/b> &amp;ndash; comparison performed only on columns present in both tables&lt;/li>&#xA;&lt;p>Another way to interpret this argument is that it is an answer on question &amp;quot;Which column can have less columns?&amp;quot;&lt;/p>&#xA;&lt;p>The primary reasoning for this argument is to provide smooth migration when presentation is changed â€“ consider this scenario: we have a CSV file with table data, and we have UI table. If we add or remove extra columns in the UI, we can keep existing sample data file and just correct the &lt;code>ignoreMissingColumns&lt;/code> argument&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="IgnoreColumnsMode">
    <eLiterals name="NONE"/>
    <eLiterals name="LEFT" value="1"/>
    <eLiterals name="RIGHT" value="2"/>
    <eLiterals name="BOTH" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WriteLines" eSuperTypes="../../org.eclipse.ecl.core/model/ecl.ecore#//Command">
    <eAnnotations source="http://www.eclipse.org/ecl/docs">
      <details key="description" value="Reads objects from input pipe and writes them into file line-by-line as strings"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="URI to write lines to. Currently supported schemes are workspace:/ for files in workspace and file:/ for files on local file system"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="append" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"
        defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="Whether to append given lines into file. Default value is false"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReadLines" eSuperTypes="../../org.eclipse.ecl.core/model/ecl.ecore#//Command">
    <eAnnotations source="http://www.eclipse.org/ecl/docs">
      <details key="description" value="Reads lines from file identified by uri and writes them one-by-one into output pipe"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="uri" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/ecl/docs">
        <details key="description" value="URI to read lines from. Currently supported schemes are workspace:/ for files in workspace and file:/ for files on local file system"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
</ecore:EPackage>
